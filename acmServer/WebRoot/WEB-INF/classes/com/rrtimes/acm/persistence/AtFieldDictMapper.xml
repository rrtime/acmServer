<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rrtimes.acm.persistence.AtFieldDictMapper">

  <insert id="insert" parameterType="AtFieldDict">
  	INSERT INTO AT_FIELD_DICT(
  		 MENU_CODE,
         F_NAME,
         F_TITLE,
         ORDER_INDEX,
         IS_SYSTEM,
         IS_INAUTH,
         IS_HASREAD,
         IS_HASUPDATE,
         VIEW_TYPE,
         CATE_GORY,
         ID_PARENT,
         F_DESC,
         REMARK )
  	VALUES(
  		#{menuCode},
  		#{fname},
  		#{ftitle},
  		#{orderIndex},
  		#{isSystem},
  		#{isInauth},
  		#{isHasread},
  		#{isHasupdate},
  		#{viewType},
  		#{cateGory},
  		#{idParent},
  		#{fDesc},
        #{remark}  )
  </insert> 
  
  <update id="update" parameterType="AtFieldDict">
  	UPDATE AT_FIELD_DICT
  		SET
  			UPDATE_TIME = #{updateTime}
  	    	,MENU_CODE = #{menuCode}
  		<if test="fname != null and fname != ''">
  	    	,F_NAME = #{fname}
  		</if>
  		<if test="ftitle != null and ftitle != ''">
  	    	,F_TITLE = #{ftitle}
  		</if>
  		<if test="orderIndex >= 0">
  	    	,ORDER_INDEX = #{orderIndex}
  		</if>
  		<if test="fdesc >= 0">
  	    	,F_DESC = #{fdesc}
  		</if>
  		<if test="remark != null and remark != ''">
  			,REMARK = #{remark}
  		</if>	
  		<if test="isSystem >= 0">
  	    	,IS_SYSTEM = #{isSystem}
  		</if>
  		<if test="isInauth >= 0">
  	    	,IS_INAUTH = #{isInauth}
  		</if>
  		<if test="isHasread >= 0">
  	    	,IS_HASREAD = #{isHasread}
  		</if>
  		<if test="isHasupdate >= 0">
  	    	,IS_HASUPDATE = #{isHasupdate}
  		</if>
  		<if test="viewType >= 0">
  	    	,VIEW_TYPE = #{viewType}
  		</if>  
  		<if test="cateGory >= 0">
  	    	,CATE_GORY = #{cateGory}
  		</if>
  		<if test="idParent >= 0">
  	    	,ID_PARENT = #{idParent}
  		</if>      
		WHERE
			ID=#{id}
  </update>
  
  <delete id="delete" parameterType="int">
  	DELETE FROM AT_FIELD_DICT WHERE ID=#{id}
  </delete>
  
  <select id="findById" parameterType="int" resultType="AtFieldDict">
  	SELECT
  		 c.ID as id,
  		 MENU_CODE as menuCode,
         F_NAME as fname,
         F_TITLE as ftitle,
         ORDER_INDEX as orderIndex,
		 IS_SYSTEM as isSystem,
		 IS_INAUTH as isInauth,
         IS_HASREAD as isHasread,
         IS_HASUPDATE as isHasupdate,
         VIEW_TYPE as viewType,
		 CATE_GORY as cateGory,
		 ID_PARENT as idParent,
         F_DESC as fdesc,
         CREATE_TIME as createTime,
	     UPDATE_TIME as updateTime,
         REMARK as remark
    FROM AT_FIELD_DICT c 
    WHERE c.ID=#{id}
  </select>
  
  <select id="findByPage" parameterType="Map" resultType="AtFieldDict">
	  	SELECT
	  		 c.ID as id,
	  		 MENU_CODE as menuCode,
	         F_NAME as fname,
	         F_TITLE as ftitle,
	         ORDER_INDEX as orderIndex,
			 IS_SYSTEM as isSystem,
			 IS_INAUTH as isInauth,
	         IS_HASREAD as isHasread,
	         IS_HASUPDATE as isHasupdate,
	         VIEW_TYPE as viewType,
			 CATE_GORY as cateGory,
			 ID_PARENT as idParent,
	         F_DESC as fdesc,
	         CREATE_TIME as createTime,
		     UPDATE_TIME as updateTime,
	         REMARK as remark
	    FROM AT_FIELD_DICT c 
	    	where 1 = 1
	 		<if test="menuCode != null and menuCode != ''">
	 	    	and MENU_CODE = #{menuCode}
	 		</if>
	 		<if test="fname != null and fname != ''">
	 	    	and LOCATE(#{fname},F_NAME) > 0
	 		</if>
	 		<if test="ftitle != null and ftitle != ''">
	 	    	and LOCATE(#{ftitle},F_TITLE) > 0
	 		</if>
	  		<if test="remark != null and remark != ''">
	  	    	and LOCATE(#{remark},REMARK) > 0
	  		</if>
	    	ORDER BY createTime DESC
	    	limit #{page.pageSize} offset #{page.offset}
  </select>
  
  <select id="findByCount" resultType="int">
  	SELECT COUNT(*) FROM AT_FIELD_DICT c
  		where 1 = 1
 		<if test="menuCode != null and menuCode != ''">
 	    	and MENU_CODE = #{menuCode}
 		</if>
 		<if test="fname != null and fname != ''">
 	    	and LOCATE(#{fname},F_NAME) > 0
 		</if>
 		<if test="ftitle != null and ftitle != ''">
 	    	and LOCATE(#{ftitle},F_TITLE) > 0
 		</if>
  		<if test="remark != null and remark != ''">
  	    	and LOCATE(#{remark},REMARK) > 0
  		</if>
  </select>
  
  <select id="findAll" resultType="AtFieldDict">
  	SELECT
  		 c.ID as id,
  		 MENU_CODE as menuCode,
         F_NAME as fname,
         F_TITLE as ftitle,
         ORDER_INDEX as orderIndex,
		 IS_SYSTEM as isSystem,
		 IS_INAUTH as isInauth,
         IS_HASREAD as isHasread,
         IS_HASUPDATE as isHasupdate,
         VIEW_TYPE as viewType,
		 CATE_GORY as cateGory,
		 ID_PARENT as idParent,
         F_DESC as fdesc,
         CREATE_TIME as createTime,
	     UPDATE_TIME as updateTime,
         REMARK as remark
    FROM AT_FIELD_DICT c 
    	ORDER BY createTime
  </select>
  
  <select id="findAtFieldDictByTreeId" resultType="Map">
  	SELECT
		asm.M_NAME AS mname,
		asm.ID AS asmId,
		afd.F_NAME AS fname,
		afd.ID AS afdId,
		afr.ID AS id,
		afr.MENU_CODE AS menuCode,
		afr.R_NAME AS rname,
		afr.PRIVILEGETYPE AS privilegeType,
		afr.FID AS fid,
		afr.UID AS uid,
		afr.ISUSERGROUP AS isUserGroup,
		afr.OPERATOR AS operator,
		afr.CREATE_TIME AS createTime,
		afr.UPDATE_TIME AS updateTime,
		afr.REMARK AS remark
	FROM
		AT_FIELD_REL afr,
		AT_SYS_MODEL asm,
		AT_FIELD_DICT afd
	WHERE 1 = 1
	AND asm.TREE_ID =  #{treeId}
	AND asm.MENU_CODE = afr.MENU_CODE
	AND afr.FID = afd.ID
  </select>
</mapper>
