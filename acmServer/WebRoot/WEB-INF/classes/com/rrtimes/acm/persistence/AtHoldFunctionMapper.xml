<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rrtimes.acm.persistence.AtHoldFunctionMapper">

  <insert id="insert" parameterType="AtHoldFunction">
  	INSERT INTO AT_HOLD_FUNCTION(
  		 MENU_CODE,
         FUN_NAME,
         IS_USER_GROUP,
         FUN_ID,
         ACTOR_ID,
         OPERATOR,
         REMARK )
  	VALUES(
  		#{menuCode},
  		#{funName},
  		#{isUserGroup},
  		#{funId},
  		#{actorId},
  		#{operator},
        #{remark}  )
  </insert> 
  
  <update id="update" parameterType="AtHoldFunction">
  	UPDATE AT_HOLD_FUNCTION
  		SET
  			UPDATE_TIME = #{updateTime}
  	    	,MENU_CODE = #{menuCode}
  		<if test="funName != null and funName != ''">
  	    	,FUN_NAME = #{funName}
  		</if>
  		<if test="funId > 0">
  	    	,FUN_ID = #{funId}
  		</if>
  		<if test="actorId > 0">
  	    	,ACTOR_ID = #{actorId}
  		</if>
  			,OPERATOR = #{operator}
  		<if test="remark != null and remark != ''">
  			,REMARK = #{remark}
  		</if>	        
		WHERE
			ID=#{id}
  </update>
  
  <select id="findById" parameterType="int" resultType="AtHoldFunction">
  	SELECT
  		 c.ID as id,
  		 MENU_CODE as menuCode,
         FUN_NAME as funName,
         IS_USER_GROUP as isUserGroup,
         FUN_ID as funId,
		 ACTOR_ID as actorId,
         CREATE_TIME as createTime,
         OPERATOR as operator,
	     UPDATE_TIME as updateTime,
         REMARK as remark
    FROM AT_HOLD_FUNCTION c 
    WHERE c.ID=#{id}
  </select>
  
  <select id="findByPage" parameterType="Map" resultType="AtHoldFunction">
	  	SELECT
	  		 c.ID as id,
	  		 MENU_CODE as menuCode,
	         FUN_NAME as funName,
	         IS_USER_GROUP as isUserGroup,
	         FUN_ID as funId,
			 ACTOR_ID as actorId,
	         CREATE_TIME as createTime,
	         OPERATOR as operator,
		     UPDATE_TIME as updateTime,
	         REMARK as remark
	    FROM AT_HOLD_FUNCTION c 
	    	where 1 = 1
	 		<if test="menuCode != null and menuCode != ''">
	 	    	and MENU_CODE = #{menuCode}
	 		</if>
	 		<if test="funName != null and funName != ''">
	 	    	and LOCATE(#{funName},FUN_NAME) > 0
	 		</if>
	 		<if test="funId > 0">
	 	    	and FUN_ID = #{funId}
	 		</if>
	 		<if test="actorId > 0">
	 	    	and ACTOR_ID = #{actorId}
	 		</if>
	  		<if test="operator != null and operator != ''">
	 	    	and OPERATOR = #{operator}
	 		</if>
	  		<if test="remark != null and remark != ''">
	  	    	and LOCATE(#{remark},REMARK) > 0
	  		</if>
	    	ORDER BY createTime DESC
	    	limit #{page.pageSize} offset #{page.offset}
  </select>
  
  <select id="findByCount" resultType="int">
  	SELECT COUNT(*) FROM AT_HOLD_FUNCTION c
  		where 1 = 1
 		<if test="menuCode != null and menuCode != ''">
 	    	and MENU_CODE = #{menuCode}
 		</if>
 		<if test="funName != null and funName != ''">
 	    	and LOCATE(#{funName},FUN_NAME) > 0
 		</if>
 		<if test="funId > 0">
 	    	and FUN_ID = #{funId}
 		</if>
 		<if test="actorId > 0">
 	    	and ACTOR_ID = #{actorId}
 		</if>
  		<if test="operator != null and operator != ''">
 	    	and OPERATOR = #{operator}
 		</if>
  		<if test="remark != null and remark != ''">
  	    	and LOCATE(#{remark},REMARK) > 0
  		</if>
  </select>
  
  <select id="findAll" resultType="AtHoldFunction">
  	SELECT
  		 c.ID as id,
  		 MENU_CODE as menuCode,
         FUN_NAME as funName,
         IS_USER_GROUP as isUserGroup,
         FUN_ID as funId,
		 ACTOR_ID as actorId,
         CREATE_TIME as createTime,
         OPERATOR as operator,
	     UPDATE_TIME as updateTime,
         REMARK as remark
    FROM AT_HOLD_FUNCTION c 
    	ORDER BY createTime
  </select>
  
  <select id="findHoldFunctionByMenuCode" resultType="AtHoldFunction">
  	SELECT
  		 c.ID as id,
  		 MENU_CODE as menuCode,
         FUN_NAME as funName,
         IS_USER_GROUP as isUserGroup,
         FUN_ID as funId,
		 ACTOR_ID as actorId,
         CREATE_TIME as createTime,
         OPERATOR as operator,
	     UPDATE_TIME as updateTime,
         REMARK as remark
    FROM AT_HOLD_FUNCTION c 
    where c.MENU_CODE = #{menuCode}
    	ORDER BY createTime
  </select>
  
  <select id="findHoldFunctionByFunId" resultType="AtHoldFunction">
  	SELECT
  		 c.ID as id,
  		 MENU_CODE as menuCode,
         FUN_NAME as funName,
         IS_USER_GROUP as isUserGroup,
         FUN_ID as funId,
		 ACTOR_ID as actorId,
         CREATE_TIME as createTime,
         OPERATOR as operator,
	     UPDATE_TIME as updateTime,
         REMARK as remark
    FROM AT_HOLD_FUNCTION c 
    where c.FUN_ID = #{funId}
    	ORDER BY createTime
  </select>
  
  <select id="findModelFunctionByActorId" resultType="AtModelFunction">
  	SELECT
  		 amf.ID as id,
  		 amf.MENU_CODE as menuCode,
         amf.F_NAME as fname,
         amf.F_TITLE as ftitle,
         amf.TABLE_INDEX as tableIndex,
		 amf.IS_SYSTEM as isSystem,
		 amf.FUN_CODE as funCode,
		 amf.FUN_DESC as funDesc,
		 amf.ID_PARENT as idParent,
		 amf.CONTROL_ID as controlId,
		 amf.CONTROL_TYPE as controlType,
		 amf.IS_HASTAG as isHastag,
         amf.CATEGORY as category,
		 amf.SHOW_INDEX as showIndex,
         amf.IS_CON_SHOWNUM as isConShownum,
         amf.CONTROL_NUM as controlNum,
         amf.CONTROL_PAGE as controlPage,
         amf.CREATE_TIME as createTime,
         amf.OPERATOR as operator,
	     amf.UPDATE_TIME as updateTime,
         amf.REMARK as remark
    FROM AT_MODEL_FUNCTION amf, AT_HOLD_FUNCTION ahf
	    where ahf.MENU_CODE = amf.MENU_CODE
	    	and ahf.FUN_ID = amf.id
	    	and ahf.ACTOR_ID = #{actorId}
	    	ORDER BY createTime
  </select>
  
  <select id="findAtSysModelByActorId" resultType="AtSysModel">
  	SELECT
  		 asm.ID as id,
  		 asm.TREE_ID as treeId,
  		 asm.MENU_CODE as menuCode,
         asm.M_NAME as mname,
         asm.M_DESC as mdesc,
         asm.IS_SYSTEM as isSystem,
         asm.CATEGORY as category,
         asm.IS_CON_SHOWNUM as isConShownum,
         asm.CONTROL_NUM as controlNum,
         asm.CONTROL_PAGE as controlPage,
         asm.SHOW_INDEX as showIndex,
         asm.CREATE_TIME as createTime,
	     asm.UPDATE_TIME as updateTime,
         asm.REMARK as remark
    FROM AT_SYS_MODEL asm, AT_MODEL_FUNCTION amf, AT_HOLD_FUNCTION ahf
	    where ahf.MENU_CODE = amf.MENU_CODE
	    	and ahf.FUN_ID = amf.id
	    	and amf.MENU_CODE = asm.MENU_CODE
	    	and ahf.ACTOR_ID = #{actorId}
	    	ORDER BY createTime
  </select>
  
  <select id="findHoldFunctionByActorIdAndMenuCode" resultType="AtHoldFunction">
  	SELECT
  		 c.ID as id,
  		 MENU_CODE as menuCode,
         FUN_NAME as funName,
         IS_USER_GROUP as isUserGroup,
         FUN_ID as funId,
		 ACTOR_ID as actorId,
         CREATE_TIME as createTime,
         OPERATOR as operator,
	     UPDATE_TIME as updateTime,
         REMARK as remark
    FROM AT_HOLD_FUNCTION c 
    where c.ACTOR_ID = #{actorId}
    	<if test="menuCode != null and menuCode != ''">
 	    	and MENU_CODE = #{menuCode}
 		</if>
    	ORDER BY createTime
  </select>
  
  <delete id="delHoldFunctionByActorIdAndTreeId" parameterType="Map">
  	DELETE FROM AT_HOLD_FUNCTION ahf WHERE ahf.ACTOR_ID = #{actorId}
  		<if test="treeId > 0">
 	    	and EXISTS (
					SELECT 1 FROM AT_SYS_MODEL asm 
						WHERE asm.TREE_ID = #{treeId} 
						  AND asm.MENU_CODE = ahf.MENU_CODE
				)
 		</if>
  </delete>
  
  <select id="findAtSysMenuByActorId" resultType="AtSysMenu">
  	SELECT
  		 asmn.ID as id,
  		 asmn.M_TITLE as mTitle,
  		 asmn.M_DESC as mdesc,
         asmn.PARENT_ID as parentId,
         asmn.TFLAG as tflag,
         asmn.INID as inid,
         asmn.IS_SYSTEM as isSystem,
         asmn.CATEGORY as category,
         asmn.IS_ENDNODE as isEndnode,
         asmn.SHOW_INDEX as showIndex,
         asmn.CREATE_TIME as createTime,
	     asmn.UPDATE_TIME as updateTime,
         asmn.REMARK as remark
    FROM 
    	AT_SYS_MENU asmn, AT_SYS_MODEL asm, 
    	AT_MODEL_FUNCTION amf, AT_HOLD_FUNCTION ahf
    where 
    	asmn.ID = asm.TREE_ID
    	and ahf.MENU_CODE = amf.MENU_CODE
    	and ahf.FUN_ID = amf.id
    	and amf.MENU_CODE = asm.MENU_CODE
    	and ahf.ACTOR_ID = #{actorId}
    	ORDER BY createTime
  </select>
  
  <select id="getModelFunctionByActorIdAndTreeId" resultType="Map">
  	SELECT
  		 asmn.ID as asmnId,
		 asmn.M_TITLE AS mTitle,
		 asm.M_NAME AS mname,
  		 amf.ID as id,
  		 amf.MENU_CODE as menuCode,
         amf.F_NAME as fname,
         amf.F_TITLE as fTitle,
         amf.TABLE_INDEX as tableIndex,
		 amf.IS_SYSTEM as isSystem,
		 amf.FUN_CODE as funCode,
		 amf.FUN_DESC as funDesc,
		 amf.ID_PARENT as idParent,
		 amf.CONTROL_ID as controlId,
		 amf.CONTROL_TYPE as controlType,
		 amf.IS_HASTAG as isHastag,
         amf.CATEGORY as category,
		 amf.SHOW_INDEX as showIndex,
         amf.IS_CON_SHOWNUM as isConShownum,
         amf.CONTROL_NUM as controlNum,
         amf.CONTROL_PAGE as controlPage,
         amf.CREATE_TIME as createTime,
         amf.OPERATOR as operator,
	     amf.UPDATE_TIME as updateTime,
         amf.REMARK as remark
    FROM AT_MODEL_FUNCTION amf,
		 AT_HOLD_FUNCTION ahf,
		 AT_SYS_MODEL asm,
		 AT_SYS_MENU asmn
	    WHERE
			ahf.ACTOR_ID = #{actorId}
		AND ahf.FUN_ID = amf.ID
		AND ahf.MENU_CODE = amf.MENU_CODE
		AND ahf.MENU_CODE = asm.MENU_CODE
		and asm.TREE_ID = asmn.ID
		and asmn.ID = #{treeId}
  </select>
  
  <select id="getModelFunctionListByIds" resultType="AtModelFunction">
  	SELECT
  		 amf.ID as id,
  		 amf.MENU_CODE as menuCode,
         amf.F_NAME as fname,
         amf.F_TITLE as fTitle,
         amf.TABLE_INDEX as tableIndex,
		 amf.IS_SYSTEM as isSystem,
		 amf.FUN_CODE as funCode,
		 amf.FUN_DESC as funDesc,
		 amf.ID_PARENT as idParent,
		 amf.CONTROL_ID as controlId,
		 amf.CONTROL_TYPE as controlType,
		 amf.IS_HASTAG as isHastag,
         amf.CATEGORY as category,
		 amf.SHOW_INDEX as showIndex,
         amf.IS_CON_SHOWNUM as isConShownum,
         amf.CONTROL_NUM as controlNum,
         amf.CONTROL_PAGE as controlPage,
         amf.CREATE_TIME as createTime,
         amf.OPERATOR as operator,
	     amf.UPDATE_TIME as updateTime,
         amf.REMARK as remark
    FROM AT_MODEL_FUNCTION amf
	    WHERE 
	    <foreach collection="array" item="ids" open="(" close=")" separator="OR"> 
			ID = #{ids} 
		</foreach> 
  </select>
  
  <select id="getModelFunctionListByIdArray" resultType="AtModelFunction">
  	SELECT
  		 amf.ID as id,
  		 amf.MENU_CODE as menuCode,
         amf.F_NAME as fname,
         amf.F_TITLE as fTitle,
         amf.TABLE_INDEX as tableIndex,
		 amf.IS_SYSTEM as isSystem,
		 amf.FUN_CODE as funCode,
		 amf.FUN_DESC as funDesc,
		 amf.ID_PARENT as idParent,
		 amf.CONTROL_ID as controlId,
		 amf.CONTROL_TYPE as controlType,
		 amf.IS_HASTAG as isHastag,
         amf.CATEGORY as category,
		 amf.SHOW_INDEX as showIndex,
         amf.IS_CON_SHOWNUM as isConShownum,
         amf.CONTROL_NUM as controlNum,
         amf.CONTROL_PAGE as controlPage,
         amf.CREATE_TIME as createTime,
         amf.OPERATOR as operator,
	     amf.UPDATE_TIME as updateTime,
         amf.REMARK as remark
    FROM AT_MODEL_FUNCTION amf
	    WHERE 
	    <foreach collection="array" item="funIds" open="(" close=")" separator="OR"> 
			ID = #{funIds} 
		</foreach> 
  </select>
  
  <select id="getTreeIdByFunIdArray" resultType="AtSysModel">
  	SELECT
  		 asm.ID as id,
  		 asm.TREE_ID as treeId,
  		 asm.MENU_CODE as menuCode,
         asm.M_NAME as mname,
         asm.M_DESC as mdesc,
         asm.IS_SYSTEM as isSystem,
         asm.CATEGORY as category,
         asm.IS_CON_SHOWNUM as isConShownum,
         asm.CONTROL_NUM as controlNum,
         asm.CONTROL_PAGE as controlPage,
         asm.SHOW_INDEX as showIndex,
         asm.CREATE_TIME as createTime,
	     asm.UPDATE_TIME as updateTime,
         asm.REMARK as remark
    FROM AT_SYS_MODEL asm, AT_MODEL_FUNCTION amf
	    where 
			<foreach collection="array" item="funIds" open="(" close=")" separator="OR"> 
				amf.ID = #{funIds} 
			</foreach>
			and amf.MENU_CODE = asm.MENU_CODE
  </select>
  
  <select id="getHoldFunctionListByActorId" resultType="AtHoldFunction">
  	SELECT
  		 c.ID as id,
  		 MENU_CODE as menuCode,
         FUN_NAME as funName,
         IS_USER_GROUP as isUserGroup,
         FUN_ID as funId,
		 ACTOR_ID as actorId,
         CREATE_TIME as createTime,
         OPERATOR as operator,
	     UPDATE_TIME as updateTime,
         REMARK as remark
    FROM AT_HOLD_FUNCTION c 
    where c.ACTOR_ID = #{actorId}
    	ORDER BY createTime
  </select>
</mapper>
